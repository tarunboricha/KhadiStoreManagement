@model KhadiStore.Application.DTOs.CreateReturnDto
@{
    ViewData["Title"] = "Process Return";
    var sale = ViewBag.Sale as KhadiStore.Application.DTOs.SaleDto;
    var existingReturns = ViewBag.ExistingReturns as List<KhadiStore.Application.DTOs.ReturnDto>;
    var remainingQuantities = ViewBag.RemainingQuantities as Dictionary<int, int> ?? new Dictionary<int, int>();
    var hasReturnableItems = ViewBag.HasReturnableItems ?? true;
}

<!-- Khadi India Theme CSS -->
<style>
    :root {
        --khadi-orange: #FF9933;
        --khadi-white: #FFFFFF;
        --khadi-green: #138808;
        --khadi-navy: #000080;
        --khadi-light-orange: #FFE4CC;
        --khadi-dark-orange: #E6830A;
        --khadi-gradient: linear-gradient(135deg, #FF9933 0%, #E6830A 100%);
    }

    .khadi-header {
        background: var(--khadi-gradient);
        color: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px rgba(255, 153, 51, 0.3);
    }

    .khadi-card {
        border: 2px solid var(--khadi-light-orange);
        border-radius: 12px;
        background: white;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        overflow: hidden;
    }

    .khadi-card-header {
        background: var(--khadi-light-orange);
        color: var(--khadi-navy);
        padding: 15px 20px;
        font-weight: 600;
        border-bottom: 2px solid var(--khadi-orange);
    }

    .khadi-card-body {
        padding: 20px;
    }

    .khadi-btn-primary {
        background: var(--khadi-gradient);
        border: none;
        color: white;
        border-radius: 8px;
        padding: 12px 25px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .khadi-btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 153, 51, 0.4);
        color: white;
    }

    .khadi-btn-secondary {
        background: white;
        border: 2px solid var(--khadi-orange);
        color: var(--khadi-orange);
        border-radius: 8px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .khadi-btn-secondary:hover {
        background: var(--khadi-orange);
        color: white;
    }

    .khadi-table {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .khadi-table thead {
        background: var(--khadi-gradient);
        color: white;
    }

    .khadi-table tbody tr:hover {
        background-color: var(--khadi-light-orange);
    }

    .khadi-table tbody tr.selected {
        background-color: var(--khadi-light-orange);
        border-left: 4px solid var(--khadi-orange);
    }

    .khadi-form-control {
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 10px 15px;
        transition: border-color 0.3s ease;
    }

    .khadi-form-control:focus {
        border-color: var(--khadi-orange);
        box-shadow: 0 0 0 0.2rem rgba(255, 153, 51, 0.25);
    }

    .khadi-alert-success {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
        border-radius: 8px;
        border-left: 4px solid var(--khadi-green);
    }

    .khadi-alert-info {
        background-color: var(--khadi-light-orange);
        border-color: var(--khadi-orange);
        color: var(--khadi-navy);
        border-radius: 8px;
        border-left: 4px solid var(--khadi-orange);
    }

    .khadi-alert-danger {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
        border-radius: 8px;
        border-left: 4px solid #dc3545;
    }

    .khadi-badge {
        background: var(--khadi-orange);
        color: white;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.85em;
        font-weight: 600;
    }

    .return-summary-card {
        background: linear-gradient(135deg, #fff 0%, var(--khadi-light-orange) 100%);
        border: 2px solid var(--khadi-orange);
        border-radius: 12px;
        padding: 20px;
        position: sticky;
        top: 20px;
    }

    .quantity-input {
        width: 80px;
        text-align: center;
        border: 2px solid var(--khadi-orange);
        border-radius: 6px;
        font-weight: 600;
        padding: 5px;
    }

    .quantity-input:disabled {
        background-color: #f8f9fa;
        border-color: #e0e0e0;
        color: #6c757d;
    }

    .hindi-text {
        color: var(--khadi-navy);
        font-style: italic;
        font-size: 0.9em;
    }

    .not-returnable {
        background-color: #f8f9fa !important;
        color: #6c757d;
    }

    .fully-returned-badge {
        background-color: #6c757d;
        color: white;
        padding: 3px 8px;
        border-radius: 10px;
        font-size: 0.75em;
        font-weight: 600;
    }

    .available-badge {
        background-color: var(--khadi-green);
        color: white;
        padding: 3px 8px;
        border-radius: 10px;
        font-size: 0.75em;
        font-weight: 600;
    }

    .return-checkbox {
        transform: scale(1.2);
        accent-color: var(--khadi-orange);
    }
</style>

<div class="container-fluid">
    <!-- Header -->
    <div class="khadi-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h2 class="mb-1">
                    <i class="fas fa-undo-alt me-2"></i>
                    Process Return - @sale?.InvoiceNumber
                </h2>
                <p class="mb-0 hindi-text">रिटर्न प्रोसेसिंग</p>
            </div>
            <div class="col-md-4 text-end">
                <a href="@Url.Action("Details", "Sales", new { id = sale?.Id })" 
                   class="khadi-btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Back to Sale
                </a>
            </div>
        </div>
    </div>

    @if (sale != null)
    {
        <div class="row">
            <div class="col-lg-8">
                <!-- Original Sale Information -->
                <div class="khadi-card">
                    <div class="khadi-card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-receipt me-2"></i>
                            Original Sale Information | मूल बिक्री जानकारी
                        </h5>
                    </div>
                    <div class="khadi-card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <table class="table table-borderless">
                                    <tr>
                                        <td><strong>Invoice Number:</strong></td>
                                        <td>@sale.InvoiceNumber</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Sale Date:</strong></td>
                                        <td>
                                            @sale.SaleDate.ToString("dd MMM yyyy")
                                            <small class="text-muted">@sale.SaleDate.ToString("hh:mm tt")</small>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Total Amount:</strong></td>
                                        <td><span class="khadi-badge">₹@sale.TotalAmount.ToString("N2")</span></td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-6">
                                <table class="table table-borderless">
                                    <tr>
                                        <td><strong>Customer:</strong></td>
                                        <td>
                                            @(!string.IsNullOrEmpty(sale.CustomerName) ? sale.CustomerName : "Walk-in Customer")
                                            @if (!string.IsNullOrEmpty(sale.CustomerPhone))
                                            {
                                                <br><small>📞 @sale.CustomerPhone</small>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Payment Method:</strong></td>
                                        <td>@sale.PaymentMethod</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Total Items:</strong></td>
                                        <td>@sale.TotalItems</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                @if (!hasReturnableItems)
                {
                    <div class="khadi-alert-info alert">
                        <h5 class="alert-heading">
                            <i class="fas fa-info-circle me-2"></i>
                            All Items Fully Returned
                        </h5>
                        <p class="mb-2">
                            <strong>@ViewBag.TotalItemsInSale</strong> item types from this sale have been completely returned.
                            No further returns are possible.
                        </p>
                        <p class="mb-0 hindi-text">सभी आइटम पूरी तरह वापस कर दिए गए हैं।</p>
                        <hr>
                        <a href="@Url.Action("Index")" class="khadi-btn-primary">
                            <i class="fas fa-list me-1"></i> View All Returns
                        </a>
                    </div>
                }

                @if (existingReturns?.Any() == true)
                {
                    <div class="khadi-alert-info alert">
                        <h6 class="alert-heading">Previous Returns Found</h6>
                        <p class="mb-2">This sale has @existingReturns.Count completed return(s). All returns are processed immediately upon creation.</p>
                        <a href="@Url.Action("Index", new { saleId = sale.Id })" class="khadi-btn-secondary btn-sm">
                            <i class="fas fa-eye me-1"></i> View Returns
                        </a>
                    </div>
                }

                <!-- Return Form -->
                @if (hasReturnableItems)
                {
                    <form asp-action="Create" method="post" id="returnForm">
                        <input type="hidden" asp-for="SaleId" />
                        
                        <div class="khadi-card">
                            <div class="khadi-card-header">
                                <h5 class="mb-0">
                                    <i class="fas fa-box-open me-2"></i>
                                    Select Items to Return | वापसी के लिए आइटम चुनें
                                </h5>
                            </div>
                            <div class="khadi-card-body">
                                @if (sale.SaleItems?.Any() == true)
                                {
                                    <div class="table-responsive">
                                        <table class="table khadi-table">
                                            <thead>
                                                <tr>
                                                    <th style="width: 50px;">
                                                        <input type="checkbox" id="selectAll" class="return-checkbox" title="Select All">
                                                    </th>
                                                    <th>Product</th>
                                                    <th class="text-center">Sold Qty</th>
                                                    <th class="text-center">Return Qty</th>
                                                    <th class="text-end">Unit Price</th>
                                                    <th class="text-end">Discount</th>
                                                    <th class="text-end">Line Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < sale.SaleItems.Count; i++)
                                                {
                                                    var item = sale.SaleItems[i];
                                                    var remainingQty = remainingQuantities.GetValueOrDefault(item.Id, item.Quantity);
                                                    var isReturnable = remainingQty > 0;

                                                    <tr class="@(isReturnable ? "" : "not-returnable")" data-sale-item-id="@item.Id">
                                                        <td class="text-center">
                                                            @if (isReturnable)
                                                            {
                                                                <input type="checkbox" 
                                                                       class="return-checkbox return-item-checkbox" 
                                                                       data-sale-item-id="@item.Id"
                                                                       data-product-id="@item.ProductId"
                                                                       data-unit-price="@item.UnitPrice"
                                                                       data-gst-rate="@item.GSTRate"
                                                                       data-max-quantity="@remainingQty">
                                                            }
                                                            else
                                                            {
                                                                <i class="fas fa-ban text-muted"></i>
                                                            }
                                                        </td>
                                                        <td>
                                                            <strong>@item.ProductName</strong><br>
                                                            <small class="text-muted">
                                                                Product ID: @item.ProductId
                                                            </small>
                                                            @if (!isReturnable)
                                                            {
                                                                <br><span class="fully-returned-badge">Fully Returned</span>
                                                            }
                                                            else
                                                            {
                                                                <br><span class="available-badge">Available: @remainingQty</span>
                                                            }
                                                        </td>
                                                        <td class="text-center">
                                                            <span class="khadi-badge">@item.Quantity</span>
                                                        </td>
                                                        <td class="text-center">
                                                            @if (isReturnable)
                                                            {
                                                                <input type="number" 
                                                                       class="form-control quantity-input return-quantity-input" 
                                                                       min="0" 
                                                                       max="@remainingQty" 
                                                                       value="0" 
                                                                       data-sale-item-id="@item.Id"
                                                                       disabled>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">0</span>
                                                            }
                                                        </td>
                                                        <td class="text-end">₹@item.UnitPrice.ToString("N2")</td>
                                                        <td class="text-end">
                                                            <span class="return-discount-amount" data-sale-item-id="@item.Id">₹0.00</span>
                                                        </td>
                                                        <td class="text-end">
                                                            <strong class="return-line-total" data-sale-item-id="@item.Id">₹0.00</strong>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }

                                <div class="alert alert-info mt-3">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>Note:</strong> Check the items you want to return and adjust quantities as needed.
                                    Return will be processed immediately with inventory update.
                                </div>
                            </div>
                        </div>

                        <!-- Return Information -->
                        <div class="khadi-card">
                            <div class="khadi-card-header">
                                <h6 class="mb-0">
                                    <i class="fas fa-info me-2"></i>
                                    Return Information
                                </h6>
                            </div>
                            <div class="khadi-card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label asp-for="ReturnReason" class="form-label">Return Reason *</label>
                                            <select asp-for="ReturnReason" class="form-select khadi-form-control" required>
                                                <option value="">Select Reason</option>
                                                <option value="Defective Product">🔧 Defective Product</option>
                                                <option value="Wrong Item Received">❌ Wrong Item Received</option>
                                                <option value="Size/Fit Issue">📏 Size/Fit Issue</option>
                                                <option value="Quality Issue">⭐ Quality Issue</option>
                                                <option value="Customer Changed Mind">🤔 Customer Changed Mind</option>
                                                <option value="Damaged in Transit">📦 Damaged in Transit</option>
                                                <option value="Late Delivery">⏰ Late Delivery</option>
                                                <option value="Color Mismatch">🎨 Color Mismatch</option>
                                                <option value="Other">❓ Other</option>
                                            </select>
                                            <span asp-validation-for="ReturnReason" class="text-danger"></span>
                                        </div>

                                        <div class="mb-3">
                                            <label asp-for="RefundMethod" class="form-label">Refund Method</label>
                                            <select asp-for="RefundMethod" class="form-select khadi-form-control">
                                                <option value="@sale.PaymentMethod">🔄 Same as Original Payment</option>
                                                <option value="Cash">💵 Cash</option>
                                                <option value="Card">💳 Card Refund</option>
                                                <option value="UPI">📱 UPI Transfer</option>
                                                <option value="BankTransfer">🏦 Bank Transfer</option>
                                                <option value="StoreCredit">🎁 Store Credit</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label asp-for="RefundReference" class="form-label">Refund Reference</label>
                                            <input asp-for="RefundReference" class="form-control khadi-form-control" 
                                                   placeholder="Enter transaction ID, reference number, or proof of refund processing">
                                            <span asp-validation-for="RefundReference" class="text-danger"></span>
                                        </div>

                                        <div class="mb-3">
                                            <label asp-for="AdditionalNotes" class="form-label">Additional Notes</label>
                                            <textarea asp-for="AdditionalNotes" class="form-control khadi-form-control" rows="3" 
                                                      placeholder="Optional: Item condition, restock notes, processing details, etc."></textarea>
                                            <span asp-validation-for="AdditionalNotes" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Hidden inputs for return items -->
                        <div id="return-items-inputs"></div>

                        <div class="text-center mt-4">
                            <button type="submit" class="khadi-btn-primary btn-lg" id="submit-return-btn" disabled>
                                <i class="fas fa-check-circle me-2"></i>
                                Process Return
                            </button>
                        </div>
                    </form>
                }
            </div>

            <div class="col-lg-4">
                <!-- Return Summary -->
                <div class="return-summary-card">
                    <h6 class="mb-3">
                        <i class="fas fa-calculator me-2"></i>
                        Refund Summary
                    </h6>

                    <div class="d-flex justify-content-between mb-2">
                        <span>Items to Return:</span>
                        <strong id="summary-items-count">0</strong>
                    </div>
                    
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <strong id="summary-subtotal">₹0.00</strong>
                    </div>
                    
                    <div class="d-flex justify-content-between mb-2">
                        <span>GST Amount:</span>
                        <strong id="summary-gst">₹0.00</strong>
                    </div>
                    
                    <div class="d-flex justify-content-between mb-3">
                        <span>Discount:</span>
                        <strong id="summary-discount">₹0.00</strong>
                    </div>
                    
                    <hr>
                    
                    <div class="d-flex justify-content-between mb-3">
                        <span class="h6">Refund Total:</span>
                        <strong class="h5 text-success" id="summary-total">₹0.00</strong>
                    </div>

                    <div id="no-items-message" class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Please select at least one item to return.
                    </div>

                    <div id="processing-info" class="alert alert-info" style="display: none;">
                        <i class="fas fa-info-circle me-2"></i>
                        Return will be processed immediately upon submission.
                    </div>

                    <div class="text-center mt-3">
                        <small class="text-muted">
                            <i class="fas fa-shield-alt me-1"></i>
                            Return will be processed immediately with inventory update
                        </small>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Calculate original bill discount percentage from sale data
            const saleSubtotal = @(sale?.SubTotal ?? 0);
            const saleGST = @(sale?.GSTAmount ?? 0);
            const saleDiscount = @(sale?.DiscountAmount ?? 0);
            const billDiscountPercentage = (saleSubtotal + saleGST > 0) ? (saleDiscount / (saleSubtotal + saleGST)) * 100 : 0;

            function updateReturnSummary() {
                let totalItems = 0;
                let totalSubtotal = 0;
                let totalGST = 0;
                let totalDiscount = 0;

                $('.return-item-checkbox:checked').each(function() {
                    const saleItemId = $(this).data('sale-item-id');
                    const quantity = parseInt($('.return-quantity-input[data-sale-item-id="' + saleItemId + '"]').val()) || 0;
                    const unitPrice = parseFloat($(this).data('unit-price'));
                    const gstRate = parseFloat($(this).data('gst-rate'));

                    if (quantity > 0) {
                        totalItems += quantity;
                        
                        const lineSubtotal = quantity * unitPrice;
                        const lineGST = lineSubtotal * (gstRate / 100);
                        const totalBeforeDiscount = lineSubtotal + lineGST;
                        const lineDiscount = totalBeforeDiscount * (billDiscountPercentage / 100);
                        
                        totalSubtotal += lineSubtotal;
                        totalGST += lineGST;
                        totalDiscount += lineDiscount;

                        // Update individual line displays
                        $('.return-gst-amount[data-sale-item-id="' + saleItemId + '"]').text('₹' + lineGST.toFixed(2));
                        $('.return-discount-amount[data-sale-item-id="' + saleItemId + '"]').text('₹' + lineDiscount.toFixed(2));
                        
                        // Update line total display
                        const lineTotal = totalBeforeDiscount - lineDiscount;
                        $('.return-line-total[data-sale-item-id="' + saleItemId + '"]').text('₹' + lineTotal.toFixed(2));
                        
                        // Highlight selected row
                        $('tr[data-sale-item-id="' + saleItemId + '"]').addClass('selected');
                    } else {
                        // Reset displays for unselected items
                        $('.return-gst-amount[data-sale-item-id="' + saleItemId + '"]').text('₹0.00');
                        $('.return-discount-amount[data-sale-item-id="' + saleItemId + '"]').text('₹0.00');
                        $('.return-line-total[data-sale-item-id="' + saleItemId + '"]').text('₹0.00');
                        $('tr[data-sale-item-id="' + saleItemId + '"]').removeClass('selected');
                    }
                });

                const grandTotal = totalSubtotal + totalGST - totalDiscount;

                $('#summary-items-count').text(totalItems);
                $('#summary-subtotal').text('₹' + totalSubtotal.toFixed(2));
                $('#summary-gst').text('₹' + totalGST.toFixed(2));
                $('#summary-discount').text('₹' + totalDiscount.toFixed(2));
                $('#summary-total').text('₹' + grandTotal.toFixed(2));

                // Show/hide messages and enable/disable submit button
                if (totalItems > 0) {
                    $('#no-items-message').hide();
                    $('#processing-info').show();
                    $('#submit-return-btn').prop('disabled', false);
                } else {
                    $('#no-items-message').show();
                    $('#processing-info').hide();
                    $('#submit-return-btn').prop('disabled', true);
                }

                updateHiddenInputs();
            }

            function updateHiddenInputs() {
                $('#return-items-inputs').empty();
                let index = 0;

                $('.return-item-checkbox:checked').each(function() {
                    const saleItemId = $(this).data('sale-item-id');
                    const productId = $(this).data('product-id');
                    const quantity = parseInt($('.return-quantity-input[data-sale-item-id="' + saleItemId + '"]').val()) || 0;

                    if (quantity > 0) {
                        $('#return-items-inputs').append(`
                            <input type="hidden" name="ReturnItems[${index}].SaleItemId" value="${saleItemId}" />
                            <input type="hidden" name="ReturnItems[${index}].ProductId" value="${productId}" />
                            <input type="hidden" name="ReturnItems[${index}].ReturnQuantity" value="${quantity}" />
                        `);
                        index++;
                    }
                });
            }

            // Select All checkbox functionality
            $('#selectAll').change(function() {
                const isChecked = $(this).is(':checked');
                $('.return-item-checkbox').each(function() {
                    const saleItemId = $(this).data('sale-item-id');
                    const quantityInput = $('.return-quantity-input[data-sale-item-id="' + saleItemId + '"]');
                    
                    if (!$(this).prop('disabled')) {
                        $(this).prop('checked', isChecked);
                        if (isChecked) {
                            quantityInput.prop('disabled', false);
                            const maxQty = parseInt(quantityInput.attr('max'));
                            quantityInput.val(Math.min(maxQty, 1));
                        } else {
                            quantityInput.prop('disabled', true).val(0);
                        }
                    }
                });
                updateReturnSummary();
            });

            // Individual checkbox change event
            $('.return-item-checkbox').change(function() {
                const saleItemId = $(this).data('sale-item-id');
                const quantityInput = $('.return-quantity-input[data-sale-item-id="' + saleItemId + '"]');
                
                if ($(this).is(':checked')) {
                    quantityInput.prop('disabled', false);
                    const maxQty = parseInt(quantityInput.attr('max'));
                    quantityInput.val(Math.min(maxQty, 1)); // Default to 1 or max available
                } else {
                    quantityInput.prop('disabled', true).val(0);
                }
                
                updateReturnSummary();
            });

            // Quantity input change event
            $('.return-quantity-input').on('input', function() {
                const saleItemId = $(this).data('sale-item-id');
                const checkbox = $('.return-item-checkbox[data-sale-item-id="' + saleItemId + '"]');
                const quantity = parseInt($(this).val()) || 0;
                
                if (quantity > 0 && !checkbox.is(':checked')) {
                    checkbox.prop('checked', true).trigger('change');
                } else if (quantity === 0 && checkbox.is(':checked')) {
                    checkbox.prop('checked', false).trigger('change');
                } else {
                    updateReturnSummary();
                }
            });

            // Form submission
            $('#returnForm').submit(function(e) {
                const checkedItems = $('.return-item-checkbox:checked').length;
                if (checkedItems === 0) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'No Items Selected',
                        text: 'Please select at least one item to return.',
                        confirmButtonColor: '#FF9933'
                    });
                    return false;
                }

                // Show loading
                Swal.fire({
                    title: 'Processing Return...',
                    text: 'Please wait while we process your return.',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
            });

            // Initialize
            updateReturnSummary();
        });
    </script>
}