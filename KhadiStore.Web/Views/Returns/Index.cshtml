@model IEnumerable<KhadiStore.Application.DTOs.ReturnDto>
@{
    ViewData["Title"] = "Returns Management";

    var returnsList = Model.ToList();
    var totalReturns = returnsList.Count;
    var completedReturns = returnsList.Count(r => r.Status == "Completed");
    var totalRefunded = returnsList.Sum(r => r.TotalAmount);
    var totalItemsReturned = returnsList.Sum(r => r.ReturnItems?.Sum(ri => ri.ReturnQuantity) ?? 0);
}

<!-- Page Title -->
<div class="row mb-4">
    <div class="col">
        <h1 class="page-title">
            <i class="fas fa-undo-alt me-2 text-warning"></i>
            Returns Management
        </h1>
    </div>
    <div class="col-auto">
        <a href="@Url.Action("Create")" class="btn btn-primary btn-lg">
            <i class="fas fa-plus me-1"></i> New Return
        </a>
    </div>
</div>

<!-- Statistics -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center shadow-sm h-100">
            <div class="card-body">
                <h6 class="text-uppercase text-muted small">Total Returns</h6>
                <p class="display-5 fw-bolder text-primary">@totalReturns</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center shadow-sm h-100">
            <div class="card-body">
                <h6 class="text-uppercase text-muted small">Completed</h6>
                <p class="display-5 fw-bolder text-success">@completedReturns</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center shadow-sm h-100">
            <div class="card-body">
                <h6 class="text-uppercase text-muted small">Total Refunded</h6>
                <p class="display-5 fw-bolder text-warning">₹@totalRefunded.ToString("N0")</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center shadow-sm h-100">
            <div class="card-body">
                <h6 class="text-uppercase text-muted small">Items Returned</h6>
                <p class="display-5 fw-bolder text-danger">@totalItemsReturned</p>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">From Date</label>
                <input type="date" class="form-control" name="startDate" value="@ViewBag.StartDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-3">
                <label class="form-label">To Date</label>
                <input type="date" class="form-control" name="endDate" value="@ViewBag.EndDate?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-2">
                <label class="form-label">Refund Method</label>
                <select class="form-select" name="refundMethod">
                    <option value="">All Methods</option>
                    <option value="Cash" selected="@(ViewBag.RefundMethod == KhadiStore.Domain.Entities.RefundMethod.Cash)">Cash</option>
                    <option value="Card" selected="@(ViewBag.RefundMethod == KhadiStore.Domain.Entities.RefundMethod.Card)">Card</option>
                    <option value="UPI" selected="@(ViewBag.RefundMethod == KhadiStore.Domain.Entities.RefundMethod.UPI)">UPI</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select class="form-select" name="status">
                    <option value="">All Status</option>
                    <option value="Completed" selected="@(ViewBag.Status == "Completed")">Completed</option>
                    <option value="Pending" selected="@(ViewBag.Status == "Pending")">Pending</option>
                    <option value="Cancelled" selected="@(ViewBag.Status == "Cancelled")">Cancelled</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2 w-100">
                    <i class="fas fa-search me-1"></i> Filter
                </button>
            </div>
        </form>
        <div class="row mt-2">
            <div class="col-md-8">
                <div class="btn-group btn-group-sm" role="group">
                    <button type="button" class="btn btn-outline-secondary" onclick="setDateRange('today')">Today</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="setDateRange('week')">This Week</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="setDateRange('month')">This Month</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="setDateRange('clear')">Clear</button>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                    <i class="fas fa-times me-1"></i> Clear All Filters
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Returns Table -->
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-undo-alt me-2"></i>
                Returns History (@returnsList.Count() records)
            </h5>
            <div>
                <button class="btn btn-outline-success btn-sm" onclick="exportReturnsToCSV()">
                    <i class="fas fa-file-csv me-1"></i> Export CSV
                </button>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        @if (returnsList.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="returnsTable">
                    <thead>
                        <tr>
                            <th style="width: 12%">Return No.</th>
                            <th style="width: 12%">Date & Time</th>
                            <th style="width: 12%">Original Sale</th>
                            <th style="width: 18%">Customer</th>
                            <th class="text-center" style="width: 8%">Items</th>
                            <th style="width: 15%">Reason</th>
                            <th class="text-center" style="width: 10%">Refund Method</th>
                            <th class="text-end" style="width: 10%">Amount</th>
                            <th class="text-center" style="width: 8%">Status</th>
                            <th class="text-center" style="width: 12%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var returnItem in returnsList.OrderByDescending(r => r.ReturnDate))
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@returnItem.ReturnNumber</strong>
                                        <br>
                                        <small class="text-muted">#@returnItem.Id</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        @returnItem.ReturnDate.ToString("dd MMM yyyy")
                                        <br>
                                        <small class="text-muted">@returnItem.ReturnDate.ToString("hh:mm tt")</small>
                                    </div>
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "Sales", new { id = returnItem.SaleId })"
                                       class="text-decoration-none">
                                        <strong>@returnItem.Sale?.InvoiceNumber</strong>
                                    </a>
                                </td>
                                <td>
                                    @if (returnItem.Customer != null)
                                    {
                                        <div>
                                            <strong>@returnItem.Customer.Name</strong>
                                            @if (!string.IsNullOrEmpty(returnItem.Customer.Phone))
                                            {
                                                <br>
                                                <small class="text-muted">@returnItem.Customer.Phone</small>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Walk-in</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <span class="badge bg-light text-dark">
                                        @(returnItem.ReturnItems?.Sum(ri => ri.ReturnQuantity) ?? 0)
                                    </span>
                                </td>
                                <td><small>@returnItem.ReturnReason</small></td>
                                <td class="text-center">@returnItem.RefundMethod</td>
                                <td class="text-end">
                                    <strong class="text-success">₹@returnItem.TotalAmount.ToString("N2")</strong>
                                </td>
                                <td class="text-center">
                                    @switch (returnItem.Status)
                                    {
                                        case "Completed":
                                            <span class="badge bg-success">Completed</span>
                                            break;
                                        case "Pending":
                                            <span class="badge bg-warning text-dark">Pending</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@returnItem.Status</span>
                                            break;
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm">
                                        <a href="@Url.Action("Details", new { id = returnItem.Id })"
                                           class="btn btn-outline-primary"
                                           title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("ReturnReceipt", new { id = returnItem.Id })"
                                           class="btn btn-outline-secondary"
                                           title="Print Receipt"
                                           target="_blank">
                                            <i class="fas fa-print"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="p-5 text-center text-muted">
                <i class="fas fa-undo-alt fa-3x mb-3"></i>
                <h5>No Returns Found</h5>
                <p>No return records match your current filters.</p>
                <p class="small">कोई रिटर्न रिकॉर्ड नहीं मिला।</p>
                <a href="@Url.Action("Index", "Sales")" class="btn btn-primary mt-3">
                    <i class="fas fa-plus me-1"></i> Process New Return
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function exportReturnsToCSV() {
            let csv = "Return No.,Date,Original Sale,Customer,Items,Reason,Refund Method,Amount,Status\n";
            document.querySelectorAll("table tbody tr").forEach(row => {
                let cols = row.querySelectorAll("td");
                let data = Array.from(cols).map(td => td.innerText.replace(/\n/g, " ").trim());
                csv += data.join(",") + "\n";
            });

            let blob = new Blob([csv], { type: "text/csv;charset=utf-8;" });
            let link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "returns.csv";
            link.click();
        }
    </script>
}
