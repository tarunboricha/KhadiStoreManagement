@model KhadiStore.Application.DTOs.CreateSaleDto
@{
    ViewData["Title"] = "Create New Sale";
}

<div class="row mb-4">
    <div class="col">
        <h1 class="page-title">
            <i class="fas fa-cash-register me-2 text-success"></i>
            Create New Sale
            <small class="text-muted fs-6 ms-2">| नई बिक्री बनाएं</small>
        </h1>
    </div>
    <div class="col-auto">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to Sales
        </a>
    </div>
</div>

<form asp-action="Create" method="post" id="saleForm">
    <div class="row">
        <div class="col-lg-8">
            <!-- Customer Information -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header" style="background: linear-gradient(135deg, #FF6B35 0%, #F7931E 100%);">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-user me-2"></i>Customer Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CustomerName" class="form-label">Customer Name</label>
                                <input asp-for="CustomerName" class="form-control" placeholder="Enter customer name (optional)">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CustomerPhone" class="form-label">Phone Number</label>
                                <input asp-for="CustomerPhone" class="form-control" placeholder="Enter phone number">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product Selection -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header" style="background: linear-gradient(135deg, #6f42c1 0%, #8e44ad 100%);">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-shopping-cart me-2"></i>Product Selection
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Select Category</label>
                            <select class="form-select" id="categorySelect">
                                <option value="">Choose Category</option>
                                @foreach (var category in ViewBag.Categories as List<SelectListItem>)
                                {
                                    <option value="@category.Value">@category.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Select Product</label>
                            <select class="form-select" id="productSelect" disabled>
                                <option value="">First select a category</option>
                            </select>
                        </div>
                    </div>

                    <!-- Selected Items -->
                    <div id="selectedItems">
                        <h6 class="text-muted mb-3">Selected Items:</h6>
                        <div class="table-responsive">
                            <table class="table table-bordered" id="itemsTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product</th>
                                        <th width="100px">Quantity</th>
                                        <th width="120px">Unit Price</th>
                                        <th width="100px">GST</th>
                                        <th width="120px">Line Total</th>
                                        <th width="80px">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="itemsTableBody">
                                    <tr id="noItemsRow">
                                        <td colspan="6" class="text-center text-muted py-4">
                                            <i class="fas fa-shopping-cart fa-2x mb-2"></i>
                                            <br>No items selected. Choose a category and product to start.
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Summary Sidebar -->
        <div class="col-lg-4">
            <!-- Billing Summary -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-calculator me-2"></i>Billing Summary
                    </h5>
                </div>
                <div class="card-body">
                    <div class="summary-section">
                        <div class="d-flex justify-content-between py-2">
                            <span>Subtotal:</span>
                            <span id="subtotalDisplay">₹0.00</span>
                        </div>
                        <div class="d-flex justify-content-between py-2">
                            <span>GST Total:</span>
                            <span id="gstDisplay">₹0.00</span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Bill Discount (%)</label>
                            <input asp-for="BillDiscountPercentage" type="number" step="0.01" min="0" max="100"
                                   class="form-control" id="discountPercentage" value="0">
                        </div>
                        <div class="d-flex justify-content-between py-2 text-danger">
                            <span>Discount Amount:</span>
                            <span id="discountDisplay">₹0.00</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between py-2">
                            <strong>Calculated Total:</strong>
                            <strong id="calculatedTotalDisplay">₹0.00</strong>
                        </div>

                        <!-- NEW: Rounding Section -->
                        <div class="mt-3 pt-3 border-top">
                            <div class="form-check form-switch mb-2">
                                <input asp-for="EnableRounding" class="form-check-input" type="checkbox" id="enableRounding" checked>
                                <label class="form-check-label fw-semibold" for="enableRounding">
                                    Enable Rounding
                                </label>
                            </div>

                            <div id="roundingOptions" class="mb-3">
                                <label class="form-label small">Rounding Method</label>
                                <select asp-for="RoundingMethod" class="form-select form-select-sm" id="roundingMethod">
                                    <option value="RoundDown">Round Down to ₹10 (1002→1000)</option>
                                    <option value="NearestTen">Nearest ₹10 (1002→1000, 1007→1010)</option>
                                    <option value="NearestFive">Nearest ₹5</option>
                                    <option value="None">No Rounding</option>
                                </select>
                            </div>

                            <div class="d-flex justify-content-between py-2 text-info" id="roundingRow" style="display: none;">
                                <span>Rounding Adjustment:</span>
                                <span id="roundingDisplay">₹0.00</span>
                            </div>
                        </div>

                        <hr>
                        <div class="d-flex justify-content-between py-2 fs-5">
                            <strong class="text-success">Final Total:</strong>
                            <strong class="text-success" id="finalTotalDisplay">₹0.00</strong>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Details -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-credit-card me-2"></i>Payment Details
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="PaymentMethod" class="form-label">Payment Method</label>
                        <select asp-for="PaymentMethod" class="form-select" id="paymentMethod">
                            <option value="Cash">Cash</option>
                            <option value="Card">Card</option>
                            <option value="UPI">UPI</option>
                            <option value="NetBanking">Net Banking</option>
                            <option value="Cheque">Cheque</option>
                        </select>
                    </div>
                    <div class="mb-3" id="paymentReferenceGroup" style="display: none;">
                        <label asp-for="PaymentReference" class="form-label">Payment Reference</label>
                        <input asp-for="PaymentReference" class="form-control" placeholder="Transaction ID, Check number, etc.">
                    </div>
                    <div class="mb-3">
                        <label asp-for="Notes" class="form-label">Notes (Optional)</label>
                        <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Any additional notes..."></textarea>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-success btn-lg" id="completeSaleBtn" disabled>
                    <i class="fas fa-check me-2"></i>Complete Sale
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-times me-2"></i>Cancel
                </a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        let selectedItems = [];
        let itemCounter = 0;

        $(document).ready(function() {
            initializeEventHandlers();
            updateTotals();
        });

        function initializeEventHandlers() {
            // Category selection
            $('#categorySelect').change(function() {
                loadProductsByCategory($(this).val());
            });

            // Product selection
            $('#productSelect').change(function() {
                if ($(this).val()) {
                    addProductToSale($(this).val());
                }
            });

            // Payment method change
            $('#paymentMethod').change(function() {
                if ($(this).val() !== 'Cash') {
                    $('#paymentReferenceGroup').show();
                } else {
                    $('#paymentReferenceGroup').hide();
                }
            });

            // Discount percentage change
            $('#discountPercentage').on('input', updateTotals);

            // Rounding toggles and changes
            $('#enableRounding').change(function() {
                $('#roundingOptions').toggle($(this).is(':checked'));
                updateTotals();
            });

            $('#roundingMethod').change(updateTotals);

            // Form submission
            $('#saleForm').submit(function(e) {
                if (selectedItems.length === 0) {
                    e.preventDefault();
                    alert('Please add at least one item to the sale.');
                    return false;
                }
                updateHiddenFields();
            });
        }

        function loadProductsByCategory(categoryId) {
            if (!categoryId) {
                $('#productSelect').prop('disabled', true).html('<option value="">First select a category</option>');
                return;
            }

            $.get('@Url.Action("GetProductsByCategory")', { categoryId: categoryId })
                .done(function(products) {
                    let options = '<option value="">Select Product</option>';
                    products.forEach(function(product) {
                        options += `<option value="${product.id}" data-price="${product.price}" data-gst="${product.gstRate}" data-stock="${product.stock}">
                                   ${product.name} - ₹${product.price} (Stock: ${product.stock})
                                   </option>`;
                    });
                    $('#productSelect').prop('disabled', false).html(options);
                })
                .fail(function() {
                    alert('Error loading products. Please try again.');
                });
        }

        function addProductToSale(productId) {
            const productOption = $(`#productSelect option[value="${productId}"]`);
            const productData = {
                id: parseInt(productId),
                name: productOption.text().split(' - ')[0],
                price: parseFloat(productOption.data('price')),
                gst: parseFloat(productOption.data('gst')),
                stock: parseInt(productOption.data('stock'))
            };

            // Check if product already exists
            const existingItem = selectedItems.find(item => item.productId === productData.id);
            if (existingItem) {
                alert('Product already added. Please modify quantity in the table.');
                $('#productSelect').val('');
                return;
            }

            const item = {
                index: itemCounter++,
                productId: productData.id,
                productName: productData.name,
                quantity: 1,
                unitPrice: productData.price,
                gstRate: productData.gst,
                stock: productData.stock
            };

            selectedItems.push(item);
            addItemToTable(item);
            updateTotals();

            // Reset selections
            $('#productSelect').val('');
            $('#noItemsRow').hide();
        }

        function addItemToTable(item) {
            const row = `
                <tr data-index="${item.index}">
                    <td>
                        <div class="fw-semibold">${item.productName}</div>
                        <small class="text-muted">ID: ${item.productId}</small>
                    </td>
                    <td>
                        <input type="number" class="form-control quantity-input" value="${item.quantity}"
                               min="1" max="${item.stock}" data-index="${item.index}">
                    </td>
                    <td class="text-end">₹${item.unitPrice.toFixed(2)}</td>
                    <td class="text-center">${item.gstRate}%</td>
                    <td class="text-end line-total">₹0.00</td>
                    <td>
                        <button type="button" class="btn btn-outline-danger btn-sm remove-item" data-index="${item.index}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;

            $('#itemsTableBody').append(row);

            // Event handlers for new row
            $(`.quantity-input[data-index="${item.index}"]`).on('input', function() {
                updateItemQuantity(item.index, parseInt($(this).val()));
            });

            $(`.remove-item[data-index="${item.index}"]`).click(function() {
                removeItem(item.index);
            });

            calculateLineTotal(item);
        }

        function updateItemQuantity(index, quantity) {
            const item = selectedItems.find(i => i.index === index);
            if (item) {
                item.quantity = quantity;
                calculateLineTotal(item);
                updateTotals();
            }
        }

        function calculateLineTotal(item) {
            const lineTotal = (item.unitPrice * item.quantity);
            $(`tr[data-index="${item.index}"] .line-total`).text(`₹${lineTotal.toFixed(2)}`);
        }

        function removeItem(index) {
            selectedItems = selectedItems.filter(item => item.index !== index);
            $(`tr[data-index="${index}"]`).remove();

            if (selectedItems.length === 0) {
                $('#noItemsRow').show();
                $('#completeSaleBtn').prop('disabled', true);
            }

            updateTotals();
        }

        function updateTotals() {
            let subtotal = 0;
            let gstTotal = 0;

            selectedItems.forEach(function(item) {
                const itemSubtotal = item.unitPrice * item.quantity;
                const itemGst = itemSubtotal * (item.gstRate / 100);

                subtotal += itemSubtotal;
                gstTotal += itemGst;
            });

            const discountPercentage = parseFloat($('#discountPercentage').val()) || 0;
            const discountAmount = (subtotal + gstTotal) * (discountPercentage / 100);
            const calculatedTotal = subtotal + gstTotal - discountAmount;

            // Update display
            $('#subtotalDisplay').text(`₹${subtotal.toFixed(2)}`);
            $('#gstDisplay').text(`₹${gstTotal.toFixed(2)}`);
            $('#discountDisplay').text(`₹${discountAmount.toFixed(2)}`);
            $('#calculatedTotalDisplay').text(`₹${calculatedTotal.toFixed(2)}`);

            // Handle rounding
            let finalTotal = calculatedTotal;
            let roundingAmount = 0;

            if ($('#enableRounding').is(':checked') && calculatedTotal > 0) {
                const roundingMethod = $('#roundingMethod').val();

                $.get('@Url.Action("CalculateRoundedAmount")', {
                    amount: calculatedTotal,
                    method: roundingMethod
                }).done(function(result) {
                    finalTotal = result.roundedAmount;
                    roundingAmount = result.roundingDifference;

                    $('#finalTotalDisplay').text(`₹${finalTotal.toFixed(2)}`);
                    $('#roundingDisplay').text(`₹${roundingAmount.toFixed(2)}`);

                    if (Math.abs(roundingAmount) > 0.01) {
                        $('#roundingRow').show();
                    } else {
                        $('#roundingRow').hide();
                    }
                });
            } else {
                $('#finalTotalDisplay').text(`₹${finalTotal.toFixed(2)}`);
                $('#roundingRow').hide();
            }

            // Enable/disable submit button
            $('#completeSaleBtn').prop('disabled', selectedItems.length === 0);
        }

        function updateHiddenFields() {
            // Clear existing hidden fields
            $('input[name^="SaleItems"]').remove();

            // Add current items as hidden fields
            selectedItems.forEach(function(item, index) {
                $('<input>').attr({
                    type: 'hidden',
                    name: `SaleItems[${index}].ProductId`,
                    value: item.productId
                }).appendTo('#saleForm');

                $('<input>').attr({
                    type: 'hidden',
                    name: `SaleItems[${index}].Quantity`,
                    value: item.quantity
                }).appendTo('#saleForm');
            });
        }
    </script>
}