@model KhadiStore.Application.DTOs.SupplierDto
@{
    ViewData["Title"] = "Supplier Details";
}

<div class="row mb-4">
    <div class="col">
        <h1 class="page-title text-primary">
            <i class="fas fa-truck me-2 text-primary"></i>
            Supplier Details - @Model.Name
            <small class="text-muted fs-6 ms-2">| आपूर्तिकर्ता विवरण</small>
        </h1>
    </div>
    <div class="col-auto">
        <div class="btn-group">
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Suppliers
            </a>
            <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-warning">
                <i class="fas fa-edit me-1"></i> Edit Supplier
            </a>
            <a href="@Url.Action("Create", "Purchases", new { supplierId = Model.Id })" class="btn btn-success">
                <i class="fas fa-plus me-1"></i> New Purchase Order
            </a>
        </div>
    </div>
</div>

<!-- Success Alert -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success border-0 shadow-sm" role="alert">
        <div class="d-flex align-items-center">
            <i class="fas fa-check-circle fa-2x me-3 text-success"></i>
            <div>
                <h5 class="alert-heading mb-1">Success!</h5>
                <p class="mb-0">@TempData["Success"]</p>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-8">
        <!-- Supplier Information -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header" style="background: linear-gradient(135deg, #FF6B35 0%, #F7931E 100%);">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-info-circle me-2"></i>Supplier Information | आपूर्तिकर्ता जानकारी
                    </h5>
                    <div class="dropdown">
                        <button class="btn btn-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-cogs me-1"></i> Actions
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" href="@Url.Action("Edit", new { id = Model.Id })">
                                    <i class="fas fa-edit me-2 text-warning"></i> Edit Details
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" onclick="toggleSupplierStatus(@Model.Id, '@Model.Name', @Model.IsActive.ToString().ToLower())">
                                    <i class="fas fa-@(Model.IsActive ? "pause" : "play") me-2 text-@(Model.IsActive ? "secondary" : "success")"></i>
                                    @(Model.IsActive ? "Deactivate" : "Activate") Supplier
                                </a>
                            </li>
                            @if (Model.TotalPurchases == 0)
                            {
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item text-danger" href="#" onclick="deleteSupplier(@Model.Id, '@Model.Name')">
                                        <i class="fas fa-trash me-2"></i> Delete Supplier
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="supplier-info-grid">
                            <div class="info-item mb-3">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-building fa-2x text-primary me-3"></i>
                                    <div>
                                        <small class="text-muted">Supplier Name</small>
                                        <div class="fw-bold fs-5 text-primary">@Model.Name</div>
                                    </div>
                                </div>
                            </div>

                            @if (!string.IsNullOrWhiteSpace(Model.ContactPerson))
                            {
                                <div class="info-item mb-3">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-user fa-2x text-info me-3"></i>
                                        <div>
                                            <small class="text-muted">Contact Person</small>
                                            <div class="fw-bold">@Model.ContactPerson</div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="info-item">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-@(Model.IsActive ? "check" : "pause") fa-2x text-@(Model.IsActive ? "success" : "secondary") me-3"></i>
                                    <div>
                                        <small class="text-muted">Status</small>
                                        <div>
                                            @if (Model.IsActive)
                                            {
                                                <span class="badge bg-success fs-6 px-3 py-2">
                                                    <i class="fas fa-check me-1"></i>Active
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary fs-6 px-3 py-2">
                                                    <i class="fas fa-pause me-1"></i>Inactive
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="supplier-info-grid">
                            @if (!string.IsNullOrWhiteSpace(Model.Phone))
                            {
                                <div class="info-item mb-3">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-phone fa-2x text-success me-3"></i>
                                        <div>
                                            <small class="text-muted">Phone Number</small>
                                            <div class="fw-bold">
                                                <a href="tel:@Model.Phone" class="text-decoration-none">@Model.Phone</a>
                                                <a href="tel:@Model.Phone" class="btn btn-sm btn-outline-success ms-2">
                                                    <i class="fas fa-phone me-1"></i>Call
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.Email))
                            {
                                <div class="info-item mb-3">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-envelope fa-2x text-info me-3"></i>
                                        <div>
                                            <small class="text-muted">Email Address</small>
                                            <div class="fw-bold">
                                                <a href="mailto:@Model.Email" class="text-decoration-none">@Model.Email</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.GSTNumber))
                            {
                                <div class="info-item">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-file-invoice fa-2x text-warning me-3"></i>
                                        <div>
                                            <small class="text-muted">GST Number</small>
                                            <div class="fw-bold font-monospace">@Model.GSTNumber</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Address Information -->
                @if (!string.IsNullOrWhiteSpace(Model.Address))
                {
                    <div class="mt-4 pt-3 border-top">
                        <h6 class="text-muted mb-2">
                            <i class="fas fa-map-marker-alt me-1"></i>Address Information:
                        </h6>
                        <div class="border rounded p-3 bg-light">
                            <div class="address-display">
                                <strong>@Model.Address</strong>
                                @if (!string.IsNullOrWhiteSpace(Model.City) || !string.IsNullOrWhiteSpace(Model.State) || !string.IsNullOrWhiteSpace(Model.PinCode))
                                {
                                    <br>
                                    @if (!string.IsNullOrWhiteSpace(Model.City))
                                    {
                                        @Model.City
                                    }
                                    @if (!string.IsNullOrWhiteSpace(Model.State))
                                    {
                                        @if (!string.IsNullOrWhiteSpace(Model.City))
                                        {
                                            <text>, </text>
                                        }
                                        @Model.State
                                    }
                                    @if (!string.IsNullOrWhiteSpace(Model.PinCode))
                                    {
                                        <text> - </text>
                                        @Model.PinCode
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Purchase History -->
        <div class="card border-0 shadow-sm">
            <div class="card-header" style="background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 text-white">
                        <i class="fas fa-history me-2"></i>Purchase History | खरीद इतिहास
                    </h5>
                    <a href="@Url.Action("Create", "Purchases", new { supplierId = Model.Id })" class="btn btn-light btn-sm">
                        <i class="fas fa-plus me-1"></i> New Purchase Order
                    </a>
                </div>
            </div>
            <div class="card-body p-0">
                @if (ViewBag.Purchases != null && ((IEnumerable<object>)ViewBag.Purchases).Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>PO Number</th>
                                    <th>Date</th>
                                    <th class="text-center">Items</th>
                                    <th class="text-end">Amount</th>
                                    <th class="text-center">Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var purchase in ViewBag.Purchases as IEnumerable<KhadiStore.Application.DTOs.PurchaseDto>)
                                {
                                    <tr>
                                        <td>
                                            <strong>@purchase.PurchaseOrderNumber</strong>
                                            <br>
                                            <small class="text-muted">ID: @purchase.Id</small>
                                        </td>
                                        <td>
                                            @purchase.PurchaseDate.ToString("dd MMM yyyy")
                                            <br>
                                            <small class="text-muted">@purchase.PurchaseDate.ToString("hh:mm tt")</small>
                                        </td>
                                        <td class="text-center">
                                            <span class="badge bg-light text-dark">@purchase.TotalItems</span>
                                        </td>
                                        <td class="text-end">
                                            <strong class="text-success">₹@purchase.TotalAmount.ToString("N2")</strong>
                                        </td>
                                        <td class="text-center">
                                            @switch (purchase.Status)
                                            {
                                                case "Ordered":
                                                    <span class="badge bg-warning text-dark">Ordered</span>
                                                    break;
                                                case "Received":
                                                    <span class="badge bg-success">Received</span>
                                                    break;
                                                case "Cancelled":
                                                    <span class="badge bg-danger">Cancelled</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@purchase.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td class="text-center">
                                            <a href="@Url.Action("Details", "Purchases", new { id = purchase.Id })" class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="p-4 text-center text-muted">
                        <i class="fas fa-shopping-cart fa-2x mb-3"></i>
                        <h6>No Purchase Orders</h6>
                        <p class="mb-3">No purchase orders have been placed with this supplier yet.</p>
                        <a href="@Url.Action("Create", "Purchases", new { supplierId = Model.Id })" class="btn btn-primary">
                            <i class="fas fa-plus me-1"></i> Create First Purchase Order
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Statistics Sidebar -->
    <div class="col-lg-4">
        <!-- Supplier Statistics -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
                <h5 class="mb-0 text-white">
                    <i class="fas fa-chart-bar me-2"></i>Statistics
                </h5>
            </div>
            <div class="card-body">
                <div class="row text-center g-3 mb-4">
                    <div class="col-6">
                        <div class="stat-box p-3 rounded" style="background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);">
                            <div class="h4 text-primary mb-1">@Model.TotalPurchases</div>
                            <small class="text-muted">Total Orders</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="stat-box p-3 rounded" style="background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);">
                            <div class="h4 text-success mb-1">₹@Model.TotalPurchaseAmount.ToString("N0")</div>
                            <small class="text-muted">Purchase Value</small>
                        </div>
                    </div>
                </div>

                <div class="supplier-metrics">
                    <div class="d-flex justify-content-between py-2 border-bottom">
                        <span><i class="fas fa-calendar text-info me-2"></i>Member Since:</span>
                        <span class="fw-semibold">@Model.CreatedAt.ToString("MMM yyyy")</span>
                    </div>
                    <div class="d-flex justify-content-between py-2 border-bottom">
                        <span><i class="fas fa-edit text-warning me-2"></i>Last Updated:</span>
                        <span class="fw-semibold">
                            @if (Model.UpdatedAt.HasValue)
                            {
                                @Model.UpdatedAt.Value.ToString("dd MMM yyyy")
                            }
                            else
                            {
                                <text>Never</text>
                            }
                        </span>
                    </div>
                    @if (Model.TotalPurchases > 0)
                    {
                        <div class="d-flex justify-content-between py-2">
                            <span><i class="fas fa-calculator text-secondary me-2"></i>Avg Order Value:</span>
                            <span class="fw-semibold">₹@((Model.TotalPurchaseAmount / Model.TotalPurchases).ToString("N0"))</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-header bg-light">
                <h6 class="mb-0 text-dark">
                    <i class="fas fa-bolt me-2"></i>Quick Actions
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-warning">
                        <i class="fas fa-edit me-1"></i> Edit Supplier
                    </a>
                    <a href="@Url.Action("Create", "Purchases", new { supplierId = Model.Id })" class="btn btn-success">
                        <i class="fas fa-plus me-1"></i> New Purchase Order
                    </a>
                    <button class="btn btn-@(Model.IsActive ? "secondary" : "success")" onclick="toggleSupplierStatus(@Model.Id, '@Model.Name', @Model.IsActive.ToString().ToLower())">
                        <i class="fas fa-@(Model.IsActive ? "pause" : "play") me-1"></i> @(Model.IsActive ? "Deactivate" : "Activate")
                    </button>
                    <a href="@Url.Action("Index", "Purchases", new { supplierId = Model.Id })" class="btn btn-outline-info">
                        <i class="fas fa-list me-1"></i> View All Orders
                    </a>
                </div>
            </div>
        </div>

        <!-- Contact Card -->
        @if (!string.IsNullOrWhiteSpace(Model.Phone) || !string.IsNullOrWhiteSpace(Model.Email))
        {
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h6 class="mb-0 text-dark">
                        <i class="fas fa-address-book me-2"></i>Quick Contact
                    </h6>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrWhiteSpace(Model.Phone))
                    {
                        <div class="d-grid gap-2 mb-2">
                            <a href="tel:@Model.Phone" class="btn btn-success">
                                <i class="fas fa-phone me-1"></i> Call @Model.Phone
                            </a>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Email))
                    {
                        <div class="d-grid gap-2">
                            <a href="mailto:@Model.Email" class="btn btn-info">
                                <i class="fas fa-envelope me-1"></i> Email
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                $('.alert-success').fadeOut('slow');
            }, 5000);

            // Animate elements on page load
            $('.card').each(function(i) {
                $(this).css('opacity', '0').animate({
                    opacity: 1
                }, 300 + (i * 100));
            });

            // Initialize tooltips
            $('[title]').tooltip();
        });

        function toggleSupplierStatus(supplierId, supplierName, isActive) {
            const action = isActive ? 'deactivate' : 'activate';
            const actionText = isActive ? 'Deactivate' : 'Activate';

            Swal.fire({
                title: `${actionText} Supplier?`,
                html: `
                    <div class="text-start">
                        <p>Are you sure you want to ${action} <strong>${supplierName}</strong>?</p>
                        ${isActive ? '<div class="alert alert-warning"><small><i class="fas fa-exclamation-triangle me-1"></i>This will hide the supplier from new purchase forms.</small></div>' : '<div class="alert alert-success"><small><i class="fas fa-check me-1"></i>This will make the supplier available for new purchases.</small></div>'}
                    </div>
                `,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: isActive ? '#6c757d' : '#28a745',
                cancelButtonColor: '#dc3545',
                confirmButtonText: `<i class="fas fa-${isActive ? 'pause' : 'play'} me-1"></i> ${actionText}`,
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = $('<form>', {
                        'method': 'POST',
                        'action': '@Url.Action("ToggleStatus")'
                    });

                    form.append($('<input>', { 'type': 'hidden', 'name': 'id', 'value': supplierId }));
                    form.append($('@Html.AntiForgeryToken()'));

                    $('body').append(form);
                    form.submit();
                }
            });
        }

        function deleteSupplier(supplierId, supplierName) {
            Swal.fire({
                title: 'Delete Supplier?',
                html: `
                    <div class="text-start">
                        <p>Permanently delete supplier <strong>${supplierName}</strong>?</p>
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            <strong>Warning:</strong> This action cannot be undone.
                        </div>
                    </div>
                `,
                icon: 'error',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: '<i class="fas fa-trash me-1"></i> Delete',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = $('<form>', {
                        'method': 'POST',
                        'action': '@Url.Action("Delete")'
                    });

                    form.append($('<input>', { 'type': 'hidden', 'name': 'id', 'value': supplierId }));
                    form.append($('@Html.AntiForgeryToken()'));

                    $('body').append(form);
                    form.submit();
                }
            });
        }
    </script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .info-item:hover {
            transform: translateX(3px);
            transition: transform 0.2s ease;
        }

        .stat-box:hover {
            transform: translateY(-2px);
            transition: transform 0.2s ease;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .address-display {
            line-height: 1.6;
        }

        .supplier-metrics .border-bottom:last-child {
            border-bottom: none !important;
        }
    </style>
}